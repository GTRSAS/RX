#pragma once
//=====================================================================//
/*!	@file
	@brief	固定サイズ・メモリー・クラス @n
			Copyright 2017 Kunihito Hiramatsu
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//

namespace utils {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  固定サイズ・メモリー・クラス
		@param[in]	SIZE	格納サイズ（バイト）
		@param[in]	DNUM	分割最大数
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <uint32_t SIZE, uint32_t DNUM>
	class fixed_memory {

		uint8_t	buff_[SIZE];

	public:
		//-----------------------------------------------------------------//
		/*!
			@brief  コンストラクタ
		*/
		//-----------------------------------------------------------------//
		fixed_memory() noexcept { }


		//-----------------------------------------------------------------//
		/*!
			@brief  最大サイズを返す
			@return 最大サイズ
		*/
		//-----------------------------------------------------------------//
		uint32_t capacity() const noexcept { return SIZE; }






	};
}
