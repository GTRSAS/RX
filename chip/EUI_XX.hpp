#pragma once
//=====================================================================//
/*!	@file
	@brief	EUI-48/EUI-64 EEPROM クラス @n
			Copyright 2017 Kunihito Hiramatsu
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include <cmath>

namespace chip {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  EUI-48/EUI-64 テンプレートクラス
		@param[in]	SPI	SPI クラス
		@param[in]	CS	チップ・セレクト
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class SPI, class CS>
	class EUI_XX {

		SPI&	spi_;

	public:
		//-----------------------------------------------------------------//
		/*!
			@brief	コンストラクター
		 */
		//-----------------------------------------------------------------//
		EUI_XX(SPI& spi) : spi_(spi) { }


		//-----------------------------------------------------------------//
		/*!
			@brief	開始
		 */
		//-----------------------------------------------------------------//
		void start()
		{
			CS::DIR = 1;
			CS::PU  = 0;
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	書き込み
			@param[in]	org	開始アドレス
			@param[out]	dst	ディストネーション・アドレス
			@param[in]	len	長さ（最大１６）
			@return 正常なら「true」
		 */
		//-----------------------------------------------------------------//
		bool read(uint8_t org, uint8_t* dst, uint8_t len)
		{
			CS::P = 0;
			spi_.xchg(0x03);
			spi_.xchg(org);
			spi_.read(dst, len);
			CS::P = 1;
			return true;
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	書き込み
			@param[in]	org	開始アドレス
			@param[in]	src	ソースアドレス
			@param[in]	len	長さ（最大１６）
			@return 正常なら「true」
		 */
		//-----------------------------------------------------------------//
		bool write(uint8_t org, const uint8_t* src, uint8_t len)
		{
			CS::P = 0;
			spi_.xchg(0x02);
			spi_.xchg(org);
			spi_.write(src, len);
			CS::P = 1;
			return true;
		}
	};
}
