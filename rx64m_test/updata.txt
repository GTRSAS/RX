
とりあえず、履歴

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.04

先ほどリリースした、５．０３ですが、ブラウザにＩＥを使うと、ＦＦＦＴＰが接続できなく
なるようです。（不思議ですが、それ以前のバージョンも同様な処理なので、問題
が発生するハズなのですが・・・）
色々調べると、ＩＥを使った場合のみ、何度か「リロード」を押すと、TCPの切断処理
に必要以上の時間がかかるようになり、その場合に、メイン処理が「停止」状態にな
る事が判りました。

時間の遅延や、接続に時間がかかる不具合も全て、これが原因のようです。

そこで、TCP切断時の処理を修正して、切断をブロック処理から、ノンブロック処理
に修正しました。

Version 5.04 を送ります。
・TCP切断の強制処理


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.05

Version 5.05 を送ります。
・４チャネル対応（DIP-SW-1をOFF）
※DIP-SW-2は開発モード用として使っています。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.06

停止は、自分の環境では、再現せず、まだ色々試している最中です。

とりあえず、TCPクライアント接続の切断処理にて、先日修正した、TCPサーバー
の切断処理と同等の問題がある事が判ったので、それを修正しました。
ただ、この修正によって、今まで動作していた動作に何らかの問題が起こる場合
もあるかもしれません。
※一応、一通りは確認していますが・・

SEEDA03 Version 5.06
・TCP クライアント、切断処理で、応答が返らない場合の強制切断処理の追加
・それらに関連する、マネージメントの修正


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.07

SEEDA03 Version 5.07 を送ります
修正点：
・ファイル書き込み時のバッファを拡大したものです。
※ただ、この修正では、ファイルオープンにかかる時間が長い場合の対策には
あまり効果が無いと思います。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.08

Version 5.08 の添付

修正箇所：
A/Dのサンプルで、Median 処理を行う場合に、かなりメモリーを消費します。
※実験的データを食わせて、１０００サンプルで、全て異なるデータが８チャネル
来てもメモリー不足にならない事を確認していますが。
８チャネルだと、かなり厳しい事には変わりありません。
そこで、処理データを少し加工して、ノイズ的なブレを吸収する事で、メモリー消費
を抑えた実験的バージョンです。

-----
以前に、IEブラウザ利用で、停止した前例がある為、IEを立ち上げずに、Firefoxで
実験する事を行ってもらえませんか？

IE起動中に、コンピューターがスリープモードになってから復帰した場合に、不具合
が起こる可能性があります。
※自宅で試した限りでは、問題無かったですが・・・


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.09

Version 5.09 を添付します。

変更内容：
・SDカードのWriteテストの追加。
※Setup/SDカード情報 で、ファイル書き込みテストが行われ、
情報が出力されます。（数秒かかります）
・SDカードアクセス、パフォーマンスの改善。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.10

Version 5.10 をリリースします。

変更点：
・CGI 文字列チェックの厳密化、及びエラー処理
・ログ出力
・ポートの初期化で、SCI12 専用ポートを除外していなかった不具合
※一瞬ポートの出力とシリアルがショートして、その影響でネットワークが起動
しない場合があった。

※バージョン番号は数値のみ可能なので、とりあえず　5.10　としています。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.11

とりあえず、クライアント接続時のタイムスタンプの不具合を修正しまし
たので確認をお願いします。

Version 5.11
・クライアント接続時、タイムスタンプが、１９７０年台になる場合がある
不具合の修正。
※私の環境はES1で、バッテリーバックアップが無い為、確認が出来ま
せん。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.12

ソースコードのクリーンアップ、関係ライブラリーのコメント追加
等なので、欠番


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.13

Version 5.13 をリリースします。

SDカードのパフォーマンスを調べる機能を強化しました。

パフォーマンスの測定は数十秒かかります。

そちらで稼働中のSEEDA03全てで、パフォーマンスを検査して結果を
お知らせ下さい。
※「ＳＤカード情報」で得られます。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.14

Version 5.04 Beta へのブランチに修正が分岐した為、欠番


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.04 Beta 01

Version 5.04 ブランチのソースコードに修正を加えています、
その為、Versionは5.04 として、後ろに「Beta 01」を付加しています。

・FTP クライアントを強制終了した場合などの、接続性を修正


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.04 Beta 02

・ネットスタック内、イーサーネット送信、受信バッファの拡張
※最大４個から８個


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.15

Version 5.15 主な修正内容：
・クライアント接続時のタイムスタンプに関する不具合の修正。

・「Version 5.04 Beta 02」に関する修正点のマージ。

・メインクロック、12.5MHzベースの1000Hz タイマー、誤差修正。
※今まで、ＣＭＴタイマーによる割り込みを使っていた為、１０００Ｈｚ
を作る場合に、最大、１時間で１秒の誤差がある事が判りました。
（プリスケーラーの設定範囲によるハード的制限による）
より正確なタイマーを構成できる、ＴＰＵに変更したので、誤差は
無くなりました。
※１２．５ＭＨｚの周波数が正確で、ＲＴＣクロック、３２．７６８ＫＨｚ
も正確な必要があります。

・ＳＤカードの読み出し速度の表示などを追加
※setup 画面、「SDカード情報」

・FTP サーバーで、１フレームで取得できる、ファイルリスト数を１０個
から５個に修正。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.16

クライアント機能で、有効、無効を制御するチェックを追加
※クライアント機能を使わない場合、ネットワークリソース（ソケット）を
余分に消費しない。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.17

・中央値に返還後のデータ（１秒に１個、時間）をFIFOに入れる管理を修正。
※最大１４秒分のFIFOに修正
・ＳＤカードのタイムゾーンを、ＧＭＴからローカルタイムに修正。
※それに合わせて、ディレクリー表示機構のタイムゾーンなど修正。
・デバッグコマンド、ファイル書き込みコマンドを追加。
・デバッグコマンド、ＦＩＦＯデータ長表示。
・ＲＴＣ時間とシステム時間の見掛け上の同期。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.18

・「write_test.bin」ファイルの書き込みをルートに修正
※以前の実装では、カレントディレクトリー
・ゲートウェイ、サブネットマスクの設定と、EUI-EEPROM への記録など
・デバッグコマンド「ip」サポート（DHCP、IP、GW、MASKの設定）
・setup 画面の構成を変更
・FTP サーバー、ファイル操作時間のデバッグ表示を強化
・EADC FIFO の容量拡大（最大積載量１４秒 ---> ３０秒）
・EADC FIFO がオーバーフロー（データのロスト、時間の遅延）した場合にターミナルにレポート
・基本機能に関するログ機能（システム設定）
    (1) 書き込み時間：「分」　　　　　　ファイル書き込み時間トータル（単位、分）
    (2) ロスト時間：「秒」　　　　　　　データ・ロストが発生した場合の値（単位、秒）
    (3) FIFOバッファ：現在値／最大数　　FIFO バッファの推移（単位、秒）
　　※現在値が最大数に達すると、データロストが発生する
    (4) FIFOバッファ最大：「秒」　　　　FIFO バッファの最大値（単位、秒）
　　※最大数（３０秒）に近いほどロストが発生する可能性が大きい　
    (5) 稼動時間表示
    (6) ＳＤカード操作時間に関する情報表示など
・強制リセット機能（ハードリセット）
・ウオッチドッグ機能
・ftp_server、RETR で、二重のファイル存在チェック、サイズ取得をを廃止
※不必要なので廃止した、処理時間が１／３に改善
・ethernet_client 接続の場合に、強制クローズ処理で、長時間の停止がある事があったのを修正
・FTP のパラメーターが非常に長い場合に、バッファーオーバーランを起こして、動作が不安定に
なる場合に対応。
※通常ありえないが、FTP クライアントが、間違った動作をした場合にも対応。
※コマンドラインの ftp で、確認できる。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.19

・ファイルパス生成のバグ修正
・syscalls 内で utf8_to_sjis 関数プロトタイプの修正
・ftp_server で新たに見つかった、バッファーオーバーランの回避


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.20

・SD カードのタイムスタンプ修正
※SDカードを取り出して、PCで見た場合の時間をローカル（東京）時間に修正
※ftp 接続で得られるファイルの作成時間をローカル（東京）に修正
※内臓 RTC の時間は GMT（グリニッジ）時間に修正
※今までのバグにより、RTC の時間を再設定する必要があります。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.21

・クライアント接続、初期設定時の動作修正
・Telnet サーバー実装によるログ出力（出力のみ実装）
※TeraTerm などで、２３番ポート「telnet」で SEEDA03 に接続する事で、
ログ出力を、Telnet 経由で取得できる。
※Telnet サーバー実装により、ソケット・ディスクリプタを消費して、
通信パケットをやりとりする為、今までに無い挙動を示す場合がある。


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Version 5.22

・http 接続４０４（存在しないＵＲＬ）の挙動で、Length の大きさを正し
く返さない不具合を修正。
・http サーバー接続に関するポリシーを修正
以前：　必要な転送が終了したら、接続を切断
最新：　クライアントが接続を切断するまで、転送が無くても接続を持続
※favicon.ico の要求にも応答出来るようにする為。（４０４を返す）
※ＩＥ以外のブラウザでは、転送が無い時間が数秒続くと、切断してくれる、
又、同じアドレスの接続は、ソケットのリソースを共有しているので問題は
無いが、ＩＥはアプリを終了するまで接続を持続するので、多重の接続が出
来ない。
又、ＩＥは、同じアドレスでもリソースの共有は行われず、新規に新しいソ
ケットを作る為。

