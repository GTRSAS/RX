#pragma once
//=====================================================================//
/*!	@file
	@brief	固定サイズ・スタック・クラス @n
			Copyright 2017 Kunihito Hiramatsu
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include <cstdint>

namespace utils {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  fixed_stack class
		@param[in]	UNIT	ユニット型
		@param[in]	SIZE	サイズ
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <typename UNIT, uint32_t SIZE>
	class fixed_stack {
	public:
		typedef UNIT	value_type;

	private:
		UNIT		stack_[SIZE];
		uint32_t	pos_;

	public:
		//-----------------------------------------------------------------//
		/*!
			@brief  コンストラクタ
		*/
		//-----------------------------------------------------------------//
		fixed_stack() noexcept : pos_(0) { }


		//-----------------------------------------------------------------//
		/*!
			@brief  コンテナが空か？
			@return 空なら「true」
		*/
		//-----------------------------------------------------------------//
		bool empty() const noexcept { return pos_ == 0; }


		//-----------------------------------------------------------------//
		/*!
			@brief  先頭の要素参照
			@return 先頭の要素
		*/
		//-----------------------------------------------------------------//
		const UNIT& top() const noexcept { return stack_[0]; }

		//-----------------------------------------------------------------//
		/*!
			@brief  プッシュ
			@return 成功なら「true」
		*/
		//-----------------------------------------------------------------//
		bool push(const UNIT& u) noexcept
		{
			if(pos_ >= SIZE) {
				return false;
			}

			stack_[pos_] = u;
			++pos_;
			return true;
		}


		//-----------------------------------------------------------------//
		/*!
			@brief  プッシュ
			@return 成功なら「true」
		*/
		//-----------------------------------------------------------------//
		const UNIT& pull() noexcept
		{
			if(pos_ == 0) {
				static const UNIT u;
				return u;
			}
			--pos_;
			return stack_[pos_];
		}


		//-----------------------------------------------------------------//
		/*!
			@brief  要素数を返す
			@return 要素数
		*/
		//-----------------------------------------------------------------//
		uint32_t size() const noexcept { return pos_; }
	};
}
