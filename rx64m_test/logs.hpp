#pragma once
//=====================================================================//
/*! @file
    @brief  ログ・クラス
	@copyright Copyright 2018 Kunihito Hiramatsu All Right Reserved.
    @author 平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include "common/format.hpp"
#include "common/time.h"

namespace seeda {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ログ・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	class logs {
	public:

		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
		/*!
			@brief  ログ構造体
		*/
		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
		struct log_t {
			time_t	time_;		///< 発生時間
			char	msg_[64];	///< 内容
			log_t() : time_(0), msg_{ 0 } { }
		};

	private:
		static const uint32_t LOG_NUM = 48;

		log_t		log_[LOG_NUM];

		uint32_t	size_;
		uint32_t	pos_;

	public:
		//-----------------------------------------------------------------//
		/*!
			@brief  コンストラクター
		*/
		//-----------------------------------------------------------------//
		logs() : log_(), size_(0), pos_(0) { }


		//-----------------------------------------------------------------//
		/*!
			@brief  ログのサイズを返す
			@return ログのサイズ
		*/
		//-----------------------------------------------------------------//
		uint32_t size() const { return size_; }


		//-----------------------------------------------------------------//
		/*!
			@brief  文書を追加
			@param[in]	t	時間
			@param[in]	msg	ログ文書
		*/
		//-----------------------------------------------------------------//
		void add(time_t t, const char* msg)
		{
			if(msg == nullptr) return;

			log_[pos_].time_ = t;
 			strncpy(log_[pos_].msg_, msg, sizeof(log_t::msg_));
			++size_;
			if(size_ > LOG_NUM) size_ = LOG_NUM;
			++pos_;
			if(pos_ >= LOG_NUM) pos_ = 0;
		}


		//-----------------------------------------------------------------//
		/*!
			@brief  ログの参照
			@param[in]	pos	ログの位置
			@return ログ
		*/
		//-----------------------------------------------------------------//
		const log_t& get(uint32_t pos) const {
			if(pos >= size_) {
				return log_[0];
			}
			return log_[pos];
		}
	};
}
